name: Build and Release
on:
  pull_request:
    types: [ opened, reopened, synchronize ]
  push:
    branches: [ main ]
    tags:
      - "v*.*.*"

permissions:
  contents: write
# Where will they run
jobs:
  build-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 50
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: "11"
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: current
          arguments: assembleRelease
      - name: Sign app APK
        uses: ilharp/sign-android-release@v1
        id: sign_app
        with:
          releaseDir: app/build/outputs/apk/release
          signingKey: ${{ secrets.SIGNING_KEY_BASE64 }}
          keyAlias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}

      - name: Changelog
        uses: fregante/release-with-changelog@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}


#      - name: Changelog
#        uses: Bullrich/generate-release-changelog@master
#        id: Changelog
#        env:
#          REPO: ${{ github.repository }}
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@latest
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          body: |
#            ${{ steps.Changelog.outputs.changelog }}
#          draft: false
#          prerelease: false



#      - name: Create release
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: gh release create "$GITHUB_REF_NAME" ${{ steps.sign_app.outputs.signedFile }} --generate-notes
#      - name: Create Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
#        with:
#          files: ${{ steps.sign_app.outputs.signedFile }}
